버전 관리 필요성
지난 어느 시점의 파일이나 소스의 내용을 확인해 보고 그 상태로 되돌리고 싶을 때

버전 관리 개념
파일의 추가 및 수정 이력(추적) 관리

버전 관리
시간 흐름에 따라 파일 집합에 대한 변경 사항을 추적, 관리
버전의 저장과 백업
여러 사용자에 대한 버전 이력 추적관리

명령어 줄 인터페이스(Command Line Interface) 방식
깃 도구 방식 중의 하나
텍스트(문자 text)로 명령을 입력하고 결과도 텍스트로 표시되는 인터페이스 방식
윈도의 명령 프롬프트(prompt)나 유닉스의 쉘(shell)

그래픽 사용자 인터페이스(Graphic User Interface) 방식
깃 도구 방식 중의 또 다른 하나
윈도처럼 그래픽 대화 화면에서 마우스와 텍스트의 입력방식으로 명령을 입력하고
결과가 표시되는 인터페이스 방식

버전 관리의 커밋 commit
저장소의 현 상태를 저장하는 행위
파일 집합의 변경 내용을 깃 저장소에 기록하는 작업

시간순으로 저장
최근 커밋부터 거슬러 올라가면 과거 변경 이력과 내용을 알 수 있음

커밋
저장소의 현재 상태를 저장

저장소
연속된 커밋으로 관리
파일이 달라지지 않았으면 파일을 새로 저장하지 않음


원격 저장소(Remote Repository)
파일이 원격 저장소 전용 서버에서 관리되며 여러 사람이 함께 공유하기 위한 저장소

지역 저장소(Local Repository)
내 PC에 파일이 저장되는 개인 전용 저장소

Clone
서버의 원격 저장소를 지역 저장소에 복제

Push
서버인 원격저장소로 올리기

Pull
지역 저장소로 내리기

파일을 저장소에 저장하는 명령어
add
commit

Push: 원격저장소 올리기
평소에는 내 PC의 지역 저장소에서 작업하다가
작업한 내용을 공개하고 싶을 때에 원격 저장소에 업로드(push)

Pull: 원격 저장소에서 지역 저장소로 내리기
원격 저장소에서 여러 사람이 작업한 파일을
지역 저장소로 가져(pull)올 수도 있음

깃 Git
2005년, 리누스 토발즈가 개발
대표적인 오픈소스 소프트웨어 프로젝트
컴퓨터 파일의 변경을 추적하는 데 사용되는
버전 관리 시스템

깃 사용 장점
모든 개발자는 지역 시스템에 코드의 전체 사본을 소유

기능
여러 개발자가 함께 작업
소스 코드의 변경 사항을 추적하는 데 사용
소스 코드 관리에 분산 버전 제어 도구가 사용
여러 개의 평행 분기를 통해 비선형 개발을 지원

Git Bash: CLI(Command Line Interface)
명령 행 인터페이스

Git GUI: GUI(Graphical user interface)
GUI 프로그램의 대부분은 Git 기능 중 일부만 구현하기 때문에 비교적 단순

깃 내부 저장소 상태
작업 디렉토리
작업 공간(work space), 작업 트리(working tree)
스테이징 영역(staging area, stage area, index)
깃 저장소(git repository, repository, .git directory)
임시 저장소(stash)

Github
버전 관리를 위한 서버 저장소 및 프로젝트 개발을 위한 협업 관리 서비스
프로젝트 소스 공유와 협업 소프트웨어 빌드 플랫폼
세계 최대의 오픈소스 공유 플랫폼
분산 환경 소스코드 버전 관리 도구인
Git의 글로벌 웹 호스팅 서비스












































































