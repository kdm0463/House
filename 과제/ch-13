reset의 3가지 옵션
무조건 깃 저장소에는 복사 

reset 옵션 --hard
$ git reset --hard HEAD~
지정된 HEAD~(커밋 메시지 Alphabet)의 내용으로 작업 폴더와 스테이지 영역, 깃 저장소가 모두 복사・수정
reset 전에 있던 작업 폴더와 스테이지 영역에 작업 내용이 모두 사라지므로 주의가 필요

$ git reset --hard HEAD~2
지정된 HEAD~(커밋 메시지 Alphabet)의 내용으로 작업 폴더와 스테이지 영역, 깃 저장소가 모두 복사・수정
reset 전에 있던 작업 폴더와 스테이지 영역에 작업 내용이 모두 사라지므로 주의가 필요

reset 옵션 --mixed
$ git reset --mixed HEAD~
지정된 HEAD~(커밋 메시지 Alphabet)의 내용으로 스테이지 영역과 깃 저장소가 모두 복사・수정
커밋 메시지 Alphanumeric의 로그 이력과 함께 당시의 스테이지 영역, 깃 저장소 내용이 모두 사라짐
다만 작업 폴더의 내용은 이전 그대로 남음

--mixed는 기본 옵션으로 git reset과 동일
옵션 --mixed는 옵션이 없는 것과 같음

$ git reset --soft HEAD~
지정된 HEAD~(커밋 메시지 Alphabet)의 내용으로 깃 저장소만 복사・수정
커밋 메시지 Alphanumeric의 로그 이력은 사라짐
작업 폴더와 스테이지 영역의 내용이 모두 이전 그대로 남음

$ git reset --옵션 commitID
--hard
인자인 커밋 깃 저장소의 내용을 작업 폴더와 스테이지 영역, 그리고 깃 저장소 모두에 복사・수정

--mixed
기본 옵션으로 스테이지 영역과 깃 저장소 두 곳에 복사・수정

--soft
깃 저장소에만 복사・수정하므로 작업 폴더와 스테이지 영역은 이전 내용이 그대로 남음

<$ git reset <옵션> <돌아가고 싶은 커밋> >

--soft
돌아가려 했던 이력으로 되돌아 갔지만
해당 내용의 인덱스(또는 스테이지)도 이전 그대로
바로 다시 커밋할 수 있는 상태로 남아있는 것
다시 마지막 이전 head로 돌아가려면
Commit 만 필요

--mixed
역시 이력은 되돌려지고, 인덱스도 되돌아가는 커밋의 내용으로 초기화
다시 마지막 이전 head로 돌아가려면
add, commit이 필요
  
--hard
돌아가려는 이력 이후의 모든 내용을 삭제
다시 마지막 이전 head로 돌아가려면
파일 수정, add, commit 필요

바로 이전 커밋 참조
$ git reset --hard ORIG_HEAD

커밋 취소 revert 
undo와 비슷한 기능
지정한 특정 커밋을 취소해 바로 이전 상태로 되돌리는 방법
reset과 다르게 커밋할 것이 없고, 작업 영역이 깨끗해야 수행 가능
커밋해온 모든 변경 사항들을 rollback
이전의 커밋 히스토리는 그대로 유지, 되돌리는 새로운 커밋이 그 이후에 추가

인자가 HEAD~와 같이 HEAD 이전을 취소하면 충돌이 발생할 수 있음
충돌이 발생하지 않으려면
바로 이전 취소를 여러 번 계속

옵션 --no-edit
추가되는 커밋 메시지가 자동으로 ‘Revert “이전 커밋 메시지”’으로 지정

git reset --hard HEAD~
이전 커밋 내용으로 작업 폴더와 스테이지 영역, 깃 저장소를 모두 수정・복사






  






